@mixin results($color-map){
  @each $ingredient, $color in $color-map{
    .results-tree__element.#{$ingredient}, .bubble.element.#{$ingredient}{
      background-image: url("ingredients/#{$ingredient}.png");
      background-size: cover;
      background-color: mix($color, lightgray);
      border: 3px solid $color;
    }
    .#{$ingredient}-left{
      border-left: 3px solid $color;
      border-top: 3px solid $color;
    }
    
    .#{$ingredient}-right{
      border-right: 3px solid $color;
      border-bottom: 3px solid $color;
      background-color: mix($color, lightgray);
    }
    
    .#{$ingredient}-back{
      background-color: darken($color, 15%);
    }
    
    .answer-grid__answer.#{$ingredient}{
      background: mix($color, lightgray);
      border: 1px solid mix($color, dimgray);
        &.true{
            background-color: lighten($color, 40%);

        }
        &.false{
              background-color: mix($color, black);
              border: 1px solid black;
        }
    }
    #log span.#{$ingredient}{
      background-color: mix($color, lightgray);
      padding: $margin;
      border: 1px solid $color;
    }
  }
}

@mixin single-colors($list){
  @each $color in $list{
    &.potion-#{$color}plus{
      background-color: #{$color};
      background-image: url('polarities/plus.png');
      background-size: cover
    }
    &.potion-#{$color}minus{
      background-color: #{$color};
      background-image: url('polarities/minus.png');
      background-size: cover
    }
  }
}

@mixin double-colors($nested-lists){
  @each $colors in $nested-lists{
    $color1: nth($colors, 1);
    $color2: nth($colors, 2);
    $badcolor: nth($colors, 3);
    &.potion-#{$color1 + $color2}plus{
      background-image: url("polarities/plus.png"), linear-gradient(#{$color1} , #{$color2});
      background-size: cover;
    }
    &.potion-#{$color1 + $color2}minus{
      background-image: url("polarities/minus.png"), linear-gradient(#{$color1} , #{$color2});
      background-size: cover;
    }
    &.potion-#{$color1 + $color2}minus.potion-#{$badcolor}plus, &.potion-#{$color1 + $color2}minus.potion-#{$badcolor}minus{
      background-image: url("polarities/unknown.png");
      background-size: cover;
    }
  }
}

@mixin pop-block{
  background: darken($paper, 15%);
  width: 100%;
  max-width: $wider;
  margin: $margin auto;
  padding: $margin;
  @media screen and (min-width: $non-mobile-break) {
    position: absolute;
    width: $wider;
    left: $iphone5 + $margin;
  }
  h3{
    text-align: center;
    margin: $margin auto;
    font-size: 15px;
    text-transform: uppercase;
    
  }
}

$paper: #DDC;
$margin: 5px;
$iphone5: 320px;
$wider: 480px;
$bubble-size: 35px;
$ingredient-colors:(
  mushroom: purple,
  fern: forestgreen,
  toad: sienna,
  foot: gold,
  flower: darkblue,
  root: tan,
  scorpion: darkred,
  feather: dimgray
);
$gradients:(
  "red" "green" "blue",
  "green" "blue" "red",
  "blue" "red" "green"
);
$rgb: ("red","blue","green","gray");
$non-mobile-break: $iphone5 + $wider + $margin;

html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}

.bubble{
  border-radius: 50%;
  display: inline-block;
  @include single-colors($rgb);
  @include double-colors($gradients);
  &.potion-neutral{
    background-color: gray;
    background-image: url('polarities/neutral.png');
    background-size: cover
  };
  &.ERROR, &.unknown{
    background-image: url('polarities/unknown.png') !important;
    background-size: cover;
  }
}

body{
  background: $paper;
  margin: 0;
  @media screen and (min-width: $non-mobile-break) {
    width: $non-mobile-break;
    position: relative;
    margin: 0 auto;
  }
}

.controls{
  @include pop-block;
  
  @media screen and (min-width: $non-mobile-break) {
    position: absolute;
    top: $margin;
  }
  .control-group{
    text-align: center;
    width: 100%;
    .control-group__select{
      width: 15%;
      display: inline-block;
      background: darken($paper, 30%);
      @media screen and (min-width: $non-mobile-break) {
        width: auto;
      }
    }
    .control-group__operator{
      text-align: center;
      width: 2.5%;
      display: inline-block;
    }
  }
}

.results-tree{
  width: $iphone5;
  margin: 0 auto;
  @media screen and (min-width: $non-mobile-break) {
    margin: $margin 0;
  }
  .results-tree__row{
    width: 100%;
    text-align: center;
    div.bubble{
      width: $bubble-size;
      height: $bubble-size;
      overflow: hidden;
      line-height: 1;
      vertical-align: top;
    }
    .results-tree__element{
      vertical-align: top;
      color: white;
    }
  }
}

.answer-grid{
  display: table;
  width: $iphone5;
  margin: 5px auto;
  @media screen and (min-width: $non-mobile-break) {
    margin: $margin 0;
  }
  .answer-grid__row{
    width: 100%;
    display: table-row;
    .answer-grid__answer{
      box-sizing: border-box;
      display: table-cell;
      width: 12.5%;
      height: 35px;
      background-size: 90%;
      background-position: center;
      background-repeat: no-repeat;
      &.type1{
        background-image: url('elements/rs-gs+BL-.svg');
      }
      &.type2{
        background-image: url('elements/rs+gs-BL+.svg');
      }
      &.type3{
        background-image: url('elements/rs+GL-bs-.svg');
      }
      &.type4{
        background-image: url('elements/rs-GL+bs+.svg');
      }
      &.type5{
        background-image: url('elements/RL-gs-bs+.svg');
      }
      &.type6{
        background-image: url('elements/RL+gs+bs-.svg');
      }
      &.type7{
        background-image: url('elements/rs-gs-bs-.svg');
      }
      &.type8{
        background-image: url('elements/RL+GL+BL+.svg');
      }
    }
    .answer-grid__answer.guess{
      border: 5px double #FFF;
    }
    .answer-grid__answer > img {
      margin: 3px;
      vertical-align: middle;
      display: none;
    }
  }
}

div#log{
  @include pop-block;
  @media screen and (min-width: $non-mobile-break) {
    top: ($iphone5 * .5) + $margin;
  }
  ul#log__list{
    padding: 0;
    li{
      text-align:center;
      list-style: none;
      padding: $margin;
      background-color: $paper;
        &:nth-child(odd){
          background-color: mix($paper, whitesmoke);
      }
    }
  }
  .bubble{
    width: $bubble-size ;
    height: $bubble-size ;
    vertical-align: middle;
    &.unknown{
      border: 3px solid gray;
    }
  }
}
 
@include results($ingredient-colors);